---
  name: Docker Build - Full
  # complete workflow with intelligent, automated tags and labels
  # images stored in ghcr.io
  # GitHub cache enabled for layers
  # Multi-arch builds for amd64 and arm64 enabled
  
  on:
    push:
      branches:
        - devops
    pull_request:
  
  jobs:
    build-image:
      name: Build Image
      runs-on: ubuntu-latest
  
      # we ALWAYS want to define what permissions we need
      # this will avoid errors if your org/repo settings are more strict
      permissions:
        packages: write # needed to push docker image to ghcr.io
  
      steps:    
  
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v2
  
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
  
        - name: Login to GHCR
          uses: docker/login-action@v2
          with:
            registry: ghcr.io
            # NOTE: github.actor is the username of the person who triggered the workflow
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
  
        - name: Docker meta
          id: docker_meta
          uses: docker/metadata-action@v4
          with:
            # FIXME: change this to your repo
            #images: ghcr.io/<your-username>/<your-repo>
            images: ghcr.io/devcraftftw/geekconsole
            flavor: |
              latest=false
            # enable these tag generators (I tend to enable them all)
            tags: |
              type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
              type=ref,event=pr
              type=ref,event=branch
              type=semver,pattern={{version}}
          
        - name: Docker build
          uses: docker/build-push-action@v4
          with:
            push: true
            tags: ${{ steps.docker_meta.outputs.tags }}
            labels: ${{ steps.docker_meta.outputs.labels }}
            cache-from: type=gha
            cache-to: type=gha,mode=max
            platforms: linux/amd64,linux/arm64