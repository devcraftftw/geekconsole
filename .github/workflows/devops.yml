---
name: Devops
# complete workflow with intelligent, automated tags and labels
# images stored in ghcr.io
# GitHub cache enabled for layers
# Multi-arch builds for amd64 and arm64 enabled

on:
  # push:
  #   branches:
  #     - devops
  # pull_request: {}
  workflow_dispatch:

# cancel any previously-started, yet still active runs of this workflow on the same branch
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build-image:
    name: Build Image
    runs-on: ubuntu-latest

    # we ALWAYS want to define what permissions we need
    # this will avoid errors if your org/repo settings are more strict
    permissions:
      contents: read
      packages: write # needed to push docker image to ghcr.io
      pull-requests: write # needed to create and update comments in PRs

    steps:    

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          # NOTE: github.actor is the username of the person who triggered the workflow
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          # FIXME: change this to your repo
          #images: ghcr.io/<your-username>/<your-repo>
          images: ghcr.io/devcraftftw/geekconsole
          flavor: |
            latest=false
          # enable these tag generators (I tend to enable them all)
          tags: |
            type=raw,value=devops,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            type=ref,event=pr
            type=ref,event=branch
            type=semver,pattern={{version}}
        
      - name: Docker build
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # platforms: linux/amd64,linux/arm64
          platforms: linux/amd64

#NEW: (START) ##########################################################
        # If PR, put image tags in the PR comments
        # from https://github.com/marketplace/actions/create-or-update-comment
      - name: Find comment for image tags
        uses: peter-evans/find-comment@v3
        if: github.event_name == 'pull_request'
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Docker image tag(s) pushed
      
        # If PR, put image tags in the PR comments
      - name: Create or update comment for image tags
        uses: peter-evans/create-or-update-comment@v4
        if: github.event_name == 'pull_request'
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Docker image tag(s) pushed:
            ```text
            ${{ steps.docker_meta.outputs.tags }}
            ```

            Labels added to images:
            ```text
            ${{ steps.docker_meta.outputs.labels }}
            ```
          edit-mode: replace
#NEW: (END) ############################################################