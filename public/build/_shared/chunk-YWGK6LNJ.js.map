{
  "version": 3,
  "sources": ["../../../app/shared/ui/Icons/Icon.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/shared/ui/Icons/Icon.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/shared/ui/Icons/Icon.tsx\");\n  import.meta.hot.lastModified = \"1706962583489.6167\";\n}\n// REMIX HMR END\n\nimport { cn } from '~/app/shared/lib/utils/index.ts';\nimport href from './sprite.svg';\nexport { href };\nconst sizeClassName = {\n  font: 'h-[1em] w-[1em]',\n  xs: 'h-3 w-3',\n  sm: 'h-4 w-4',\n  md: 'h-5 w-5',\n  lg: 'h-6 w-6',\n  xl: 'h-7 w-7'\n};\nconst childrenSizeClassName = {\n  font: 'gap-1.5',\n  xs: 'gap-1.5',\n  sm: 'gap-1.5',\n  md: 'gap-2',\n  lg: 'gap-2',\n  xl: 'gap-3'\n};\n\n/**\n * Renders an SVG icon. The icon defaults to the size of the font. To make it\n * align vertically with neighboring text, you can pass the text as a child of\n * the icon and it will be automatically aligned.\n * Alternatively, if you're not ok with the icon being to the left of the text,\n * you need to wrap the icon and text in a common parent and set the parent to\n * display \"flex\" (or \"inline-flex\") with \"items-center\" and a reasonable gap.\n */\nexport function Icon({\n  name,\n  size = 'font',\n  className,\n  children,\n  ...props\n}) {\n  if (children) {\n    return <span className={`inline-flex items-center ${childrenSizeClassName[size]}`}>\n\t\t\t\t<Icon name={name} size={size} className={className} {...props} />\n\t\t\t\t{children}\n\t\t\t</span>;\n  }\n  return <svg {...props} className={cn(sizeClassName[size], 'inline self-center', className)}>\n\t\t\t<use href={`${href}#${name}`} />\n\t\t</svg>;\n}\n_c = Icon;\nvar _c;\n$RefreshReg$(_c, \"Icon\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;AAyDI;AAxDJ,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,mCAAqC,EAAE;AAAA,EAChF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA8B;AAC9B,cAAY,IAAI,eAAe;AACjC;AAMA,IAAM,gBAAgB;AAAA,EACpB,MAAM;AAAA,EACN,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AACN;AACA,IAAM,wBAAwB;AAAA,EAC5B,MAAM;AAAA,EACN,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AACN;AAUO,SAAS,KAAK;AAAA,EACnB;AAAA,EACA,OAAO;AAAA,EACP;AAAA,EACA;AAAA,EACA,GAAG;AACL,GAAG;AACD,MAAI,UAAU;AACZ,WAAO,mDAAC,UAAK,WAAW,4BAA4B,sBAAsB,IAAI,KAC9E;AAAA,yDAAC,QAAK,MAAY,MAAY,WAAuB,GAAG,SAAxD;AAAA;AAAA;AAAA;AAAA,aAA+D;AAAA,MAC9D;AAAA,SAFM;AAAA;AAAA;AAAA;AAAA,WAGR;AAAA,EACD;AACA,SAAO,mDAAC,SAAK,GAAG,OAAO,WAAW,GAAG,cAAc,IAAI,GAAG,sBAAsB,SAAS,GACxF,6DAAC,SAAI,MAAM,GAAG,kBAAQ,UAAtB;AAAA;AAAA;AAAA;AAAA,SAA8B,KADxB;AAAA;AAAA;AAAA;AAAA,SAEP;AACF;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,MAAM;AAEvB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
