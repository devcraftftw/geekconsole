{
  "version": 3,
  "sources": ["../../../../../../app/routes/_layout+/dashboard+/books+/$bookId_.edit.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_layout+/dashboard+/books+/$bookId_.edit.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_layout+/dashboard+/books+/$bookId_.edit.tsx\");\n  import.meta.hot.lastModified = \"1707021217389.3665\";\n}\n// REMIX HMR END\n\nimport { invariantResponse } from '@epic-web/invariant';\nimport { json } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { prisma, requireUserId } from '~/app/core/server/index.server.ts';\nimport { GeneralErrorBoundary } from '~/app/shared/ui';\nimport BookEditor, { action } from './__book-editor';\nexport { action };\nexport const handle = {\n  breadcrumb: 'Edit Book',\n  getSitemapEntries: () => null\n};\nexport const meta = () => {\n  return [{\n    title: 'Edit book | GeekConsole'\n  }, {\n    name: 'description',\n    content: 'Edit your favourite book here'\n  }];\n};\nexport async function loader({\n  params,\n  request\n}) {\n  const userId = await requireUserId(request);\n  const readingStatuses = await prisma.bookReadingStatus.findMany({\n    select: {\n      id: true,\n      name: true\n    }\n  });\n  const book = await prisma.book.findFirst({\n    select: {\n      id: true,\n      title: true,\n      author: true,\n      year: true,\n      status: {\n        select: {\n          name: true\n        }\n      },\n      description: true,\n      comment: true,\n      images: {\n        select: {\n          id: true,\n          altText: true\n        }\n      }\n    },\n    where: {\n      id: params.bookId,\n      ownerId: userId\n    }\n  });\n  invariantResponse(book, 'Not found', {\n    status: 404\n  });\n  return json({\n    book,\n    readingStatuses\n  });\n}\nexport default function BookEditRoute() {\n  _s();\n  const data = useLoaderData();\n  return <BookEditor book={data.book} readingStatuses={data.readingStatuses} />;\n}\n_s(BookEditRoute, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = BookEditRoute;\nexport function ErrorBoundary() {\n  return <GeneralErrorBoundary statusHandlers={{\n    404: ({\n      params\n    }) => <p>No book with the id \"{params.bookId}\" exists</p>\n  }} />;\n}\n_c2 = ErrorBoundary;\nvar _c, _c2;\n$RefreshReg$(_c, \"BookEditRoute\");\n$RefreshReg$(_c2, \"ErrorBoundary\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,kBAAqB;AAiEZ;AAtFT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,8DAAgE,EAAE;AAAA,EAC3G;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyD;AACzD,cAAY,IAAI,eAAe;AACjC;AAUO,IAAM,SAAS;AAAA,EACpB,YAAY;AAAA,EACZ,mBAAmB,MAAM;AAC3B;AACO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,GAAG;AAAA,IACD,MAAM;AAAA,IACN,SAAS;AAAA,EACX,CAAC;AACH;AA6Ce,SAAR,gBAAiC;AACtC,KAAG;AACH,QAAM,OAAO,cAAc;AAC3B,SAAO,mDAAC,cAAW,MAAM,KAAK,MAAM,iBAAiB,KAAK,mBAAnD;AAAA;AAAA;AAAA;AAAA,SAAoE;AAC7E;AACA,GAAG,eAAe,gCAAgC,OAAO,WAAY;AACnE,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACE,SAAS,gBAAgB;AAC9B,SAAO,mDAAC,wBAAqB,gBAAgB;AAAA,IAC3C,KAAK,CAAC;AAAA,MACJ;AAAA,IACF,MAAM,mDAAC,OAAE;AAAA;AAAA,MAAsB,OAAO;AAAA,MAAO;AAAA,SAAvC;AAAA;AAAA;AAAA;AAAA,WAA+C;AAAA,EACvD,KAJO;AAAA;AAAA;AAAA;AAAA,SAIJ;AACL;AACA,MAAM;AACN,IAAI;AAAJ,IAAQ;AACR,aAAa,IAAI,eAAe;AAChC,aAAa,KAAK,eAAe;AAEjC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
