{
  "version": 3,
  "sources": ["../../../../../../app/routes/_layout+/dashboard+/books+/new.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_layout+/dashboard+/books+/new.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_layout+/dashboard+/books+/new.tsx\");\n  import.meta.hot.lastModified = \"1707011059917.4927\";\n}\n// REMIX HMR END\n\nimport { json } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { prisma, requireUserId } from '~/app/core/server/index.server.ts';\nimport BookEditor, { action } from './__book-editor';\nexport const handle = {\n  breadcrumb: 'New Book',\n  getSitemapEntries: () => null\n};\nexport const meta = () => {\n  return [{\n    title: 'New book | GeekConsole'\n  }, {\n    name: 'description',\n    content: 'Add new book to your collection'\n  }];\n};\nexport async function loader({\n  request\n}) {\n  await requireUserId(request);\n  const readingStatuses = await prisma.bookReadingStatus.findMany({\n    select: {\n      id: true,\n      name: true\n    }\n  });\n  return json({\n    readingStatuses\n  });\n}\nexport { action };\nexport default function NewBookRoute() {\n  _s();\n  const data = useLoaderData();\n  return <BookEditor readingStatuses={data.readingStatuses} />;\n}\n_s(NewBookRoute, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = NewBookRoute;\nvar _c;\n$RefreshReg$(_c, \"NewBookRoute\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAAqB;AAkCZ;AAtDT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,oDAAsD,EAAE;AAAA,EACjG;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA+C;AAC/C,cAAY,IAAI,eAAe;AACjC;AAOO,IAAM,SAAS;AAAA,EACpB,YAAY;AAAA,EACZ,mBAAmB,MAAM;AAC3B;AACO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,GAAG;AAAA,IACD,MAAM;AAAA,IACN,SAAS;AAAA,EACX,CAAC;AACH;AAgBe,SAAR,eAAgC;AACrC,KAAG;AACH,QAAM,OAAO,cAAc;AAC3B,SAAO,mDAAC,cAAW,iBAAiB,KAAK,mBAAlC;AAAA;AAAA;AAAA;AAAA,SAAmD;AAC5D;AACA,GAAG,cAAc,gCAAgC,OAAO,WAAY;AAClE,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,cAAc;AAE/B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
