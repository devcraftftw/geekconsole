{
  "version": 3,
  "sources": ["../../../../../../app/routes/_layout+/dashboard+/car+/$expenseId_.edit.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_layout+/dashboard+/car+/$expenseId_.edit.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_layout+/dashboard+/car+/$expenseId_.edit.tsx\");\n  import.meta.hot.lastModified = \"1706962574087.2463\";\n}\n// REMIX HMR END\n\nimport { invariantResponse } from '@epic-web/invariant';\nimport { json } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { prisma, requireUserId } from '~/app/core/server/index.server.ts';\nimport { GeneralErrorBoundary } from '~/app/shared/ui';\nimport CarExpenseEditor, { action } from './__car-expense-editor';\nexport { action };\nexport const handle = {\n  breadcrumb: 'Edit Car Expense',\n  getSitemapEntries: () => null\n};\nexport const meta = () => {\n  return [{\n    title: 'Edit expense | GeekConsole'\n  }, {\n    name: 'description',\n    content: 'Edit your car expense here'\n  }];\n};\nexport async function loader({\n  params,\n  request\n}) {\n  const userId = await requireUserId(request);\n  const spending = await prisma.carSpending.findFirst({\n    select: {\n      id: true,\n      value: true,\n      date: true,\n      typeId: true,\n      comment: true\n    },\n    where: {\n      id: params.expenseId,\n      ownerId: userId\n    }\n  });\n  const spendingTypes = await prisma.carSpendingType.findMany({\n    select: {\n      id: true,\n      name: true\n    }\n  });\n  invariantResponse(spending, 'Not found', {\n    status: 404\n  });\n  return json({\n    spending,\n    spendingTypes\n  });\n}\nexport default function BookEdit() {\n  _s();\n  const data = useLoaderData();\n  return <CarExpenseEditor spending={data.spending} />;\n}\n_s(BookEdit, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = BookEdit;\nexport function ErrorBoundary() {\n  return <GeneralErrorBoundary statusHandlers={{\n    404: ({\n      params\n    }) => <p>No expense with the id \"{params.expenseId}\" exists</p>\n  }} />;\n}\n_c2 = ErrorBoundary;\nvar _c, _c2;\n$RefreshReg$(_c, \"BookEdit\");\n$RefreshReg$(_c2, \"ErrorBoundary\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,kBAAqB;AAqDZ;AA1ET,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,+DAAiE,EAAE;AAAA,EAC5G;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA0D;AAC1D,cAAY,IAAI,eAAe;AACjC;AAUO,IAAM,SAAS;AAAA,EACpB,YAAY;AAAA,EACZ,mBAAmB,MAAM;AAC3B;AACO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,GAAG;AAAA,IACD,MAAM;AAAA,IACN,SAAS;AAAA,EACX,CAAC;AACH;AAiCe,SAAR,WAA4B;AACjC,KAAG;AACH,QAAM,OAAO,cAAc;AAC3B,SAAO,mDAAC,oBAAiB,UAAU,KAAK,YAAjC;AAAA;AAAA;AAAA;AAAA,SAA2C;AACpD;AACA,GAAG,UAAU,gCAAgC,OAAO,WAAY;AAC9D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACE,SAAS,gBAAgB;AAC9B,SAAO,mDAAC,wBAAqB,gBAAgB;AAAA,IAC3C,KAAK,CAAC;AAAA,MACJ;AAAA,IACF,MAAM,mDAAC,OAAE;AAAA;AAAA,MAAyB,OAAO;AAAA,MAAU;AAAA,SAA7C;AAAA;AAAA;AAAA;AAAA,WAAqD;AAAA,EAC7D,KAJO;AAAA;AAAA;AAAA;AAAA,SAIJ;AACL;AACA,MAAM;AACN,IAAI;AAAJ,IAAQ;AACR,aAAa,IAAI,UAAU;AAC3B,aAAa,KAAK,eAAe;AAEjC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
